{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mOAaeA,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACE,wBAAIC,UAAY,QACbJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCU3B,EAfA,WAEX,OADgBK,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KARV,aAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAKF,GAEjB,OADiBL,IAAMQ,IAAN,UAbL,aAaK,YAAwBD,GAAMF,GAChCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCTvCK,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OAAgB,OAAZA,EACK,KAGP,yBAAKb,UAAY,SACda,IAiGQC,EA3FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGpB,MAAK,SAAAqB,GACJT,EAASS,QAGd,IAID,IAyCMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAhC,GAAI,OAAuB,IAAnBA,EAAKG,aAE9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcc,QAAWS,IACzB,6BACE,4BAAQpB,QAAW,kBAAMmB,GAAYD,KAArC,QACQA,EAAU,YAAY,QAGhC,4BACGO,EAAYE,KAAI,SAACjC,EAAMkC,GAAP,OACf,kBAAC,EAAD,CACEC,IAAOD,EACPlC,KAAQA,EACRC,iBAAoB,kBA5CH,SAACa,GAC1B,IAAMd,EAAOoB,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,KAAOA,KAChCwB,EAAW,eAAOtC,EAAP,CAAaG,WAAYH,EAAKG,YAE/C0B,EACUf,EAAIwB,GACX7B,MAAK,SAAA8B,GACJlB,EAASD,EAAMa,KAAI,SAAAjC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOuC,SAEpDC,OAAM,SAAAC,GACLd,EAAgB,QAAD,OACL3B,EAAKK,QADA,yCAGfqC,YAAW,WACTf,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAK,GAAC,OAAIA,EAAEvB,KAAOA,SA4BN6B,CAAmB3C,EAAKc,WAIxD,0BAAM8B,SA/DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB1C,QAASiB,EACT0B,MAAM,IAAIC,MAAOC,cACjB/C,UAAWgD,KAAKC,SAAW,IAE7BvB,EACUkB,GACPtC,MAAK,SAAA8B,GACJlB,EAASD,EAAMiC,OAAOd,IACtBhB,EAAW,SAqDX,2BACA+B,MAAOhC,EACPiC,SA9BmB,SAACV,GAExBtB,EAAWsB,EAAMW,OAAOF,UA8BpB,4BAAQG,KAAK,UAAb,W,MCjGRlD,IACGC,IAAI,mCACJC,MAAK,SAAAC,GACJ,IAAMU,EAAQV,EAASC,KAOvB+C,IAASC,OACT,kBAAC,EAAD,CAAKvC,MAAOA,IACZwC,SAASC,eAAe,c","file":"static/js/main.ead7262a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n  return(\r\n    <li className = 'note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data )\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data )\r\n}\r\n\r\nconst update = (id , newObject) => {\r\n    const request =  axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data )\r\n}\r\n\r\nexport default { getAll, create, update }","// import React from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport React, { useState, useEffect } from 'react'\r\n// import axios from 'axios'\r\n\r\nconst Notification= ({ message }) => {\r\n  if (message === null) {\r\n    return null \r\n  } \r\n  return (\r\n    <div className = \"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  },\r\n   [])\r\n\r\n  // console.log('render', notes.length, 'notes');\r\n  \r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote=> {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note ${note.content} was already removed from the server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id ))\r\n      })\r\n    \r\n  }\r\n  \r\n  const handleNoteChange = (event) => {\r\n    // console.log(event.target.value);\r\n    setNewNote(event.target.value)\r\n  }\r\n  \r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important === true)\r\n   \r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message = {errorMessage}></Notification>\r\n      <div>\r\n        <button onClick = {() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important':'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) => \r\n          <Note\r\n            key = {i} \r\n            note = {note} \r\n            toggleImportance = {() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n        value={newNote}\r\n        onChange = {handleNoteChange}\r\n        />\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport axios from 'axios'\r\nimport './index.css'\r\n\r\naxios\r\n  .get('http://localhost:3001/api/notes')\r\n  .then(response => {\r\n    const notes = response.data\r\n// const App = () => {\r\n//   return(\r\n//     <div>Hello, World</div>\r\n//   )\r\n// }\r\n\r\n    ReactDOM.render(\r\n    <App notes={notes} />,\r\n    document.getElementById('root')\r\n    )\r\n\r\n})\r\n  \r\n"],"sourceRoot":""}