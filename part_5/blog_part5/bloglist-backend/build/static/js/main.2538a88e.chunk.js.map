{"version":3,"sources":["services/blogs.js","components/Blog.js","components/loginForm.js","components/Notification.js","components/NewBlogForm.js","components/LogoutButton.js","components/BlogDisplay.js","components/Toggleable.js","services/login.js","App.js","index.js"],"names":["token","getAll","axios","get","then","response","data","create","newObject","header","a","config","headers","Authorization","post","setToken","newToken","console","log","update","id","request","put","deleteOne","delete","currentUser","JSON","parse","window","localStorage","getItem","Blog","blog","useState","full","setFull","flipFullState","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","incrementLikes","modificationID","updatedLikes","likes","updatedBlog","blogService","returnedBlog","deleteEntry","confirmation","confirm","targetID","user","username","style","title","author","url","onClick","LoginForm","errorMessage","handleLogin","handleUsernameChange","handlePasswordChange","password","onSubmit","type","value","name","onChange","Notification","successMessage","message","className","NewBlogForm","handlePost","handleTitleChange","handleAuthorChange","handleUrlChange","LogoutButton","handleLogout","BlogDisplay","props","sortedBlogs","blogs","sort","blogOne","blogTwo","map","key","children","Toggleable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","login","credentials","App","setBlogs","setUsername","setPassword","setUser","setAuthor","setTitle","setUrl","setErrorMessage","setSuccessMessage","blogFormRef","createRef","useEffect","loggedInUserJSON","event","preventDefault","loginService","setItem","stringify","setTimeout","removeItem","newBlog","current","concat","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2538a88e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n  console.log(`token set to ${token}`)\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n  \r\n\r\nconst create = async (newObject, header) => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  const response = await axios.post(baseUrl, newObject,config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n    const request =  axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data )\r\n}\r\n\r\nconst deleteOne = async (id) => {\r\n  console.log(`Deleting blog id: ${id}`)\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  console.log('Response is', response);\r\n  return response.data\r\n}\r\n\r\nexport default { getAll,\r\n                 create,\r\n                 setToken,\r\n                 update,\r\n                 deleteOne,\r\n                 }\r\n","import React, {useState} from 'react'\r\nimport blogService from '../services/blogs'\r\n\r\nconst currentUser = JSON.parse(window.localStorage.getItem('loggedInUser'))\r\n\r\nconst Blog = ({ blog }) => {\r\n  const [full, setFull] = useState(false)  \r\n  const flipFullState = () => {\r\n    setFull(!full)\r\n  }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const incrementLikes = async () => {\r\n    try {\r\n      const modificationID = blog.id\r\n      const updatedLikes = blog.likes + 1\r\n      const updatedBlog = {\r\n        ...blog,\r\n        likes: updatedLikes\r\n      }\r\n      const returnedBlog = await blogService.update(modificationID, updatedBlog)\r\n      blog = returnedBlog\r\n    } catch (err) {\r\n      console.log('The note could not be updated');\r\n    }\r\n  }\r\n  \r\n  \r\n  const deleteEntry = async () => {\r\n    const confirmation = window.confirm(\"Are you sure you want to delete this post\")\r\n    const targetID = blog.id\r\n    if(confirmation) {\r\n          blogService.deleteOne(targetID)\r\n    }\r\n    return null\r\n  }\r\n   \r\n  if (full && blog.user.username === currentUser.username) {\r\n   return(\r\n     <div style={blogStyle}>\r\n       <p>{`${blog.title} by ${blog.author}`}</p>\r\n       <p>{`URL: ${blog.url}`}</p>\r\n       <div>\r\n         <p>\r\n           {`Likes: ${blog.likes}`}\r\n         </p>\r\n         <button onClick={incrementLikes}>Like</button>\r\n       </div>\r\n       <p>{`${blog.user.username}`}</p>\r\n       <button onClick={flipFullState} >Hide Full</button>\r\n         <button onClick={deleteEntry}>Delete Blog Entry</button>\r\n     </div>\r\n   ) \r\n  }\r\n  else if (full) {\r\n   return(\r\n     <div style={blogStyle}>\r\n       <p>{`${blog.title} by ${blog.author}`}</p>\r\n       <p>{`URL: ${blog.url}`}</p>\r\n       <div>\r\n         <p>\r\n           {`Likes: ${blog.likes}`}\r\n         </p>\r\n         <button onClick={incrementLikes}>Like</button>\r\n       </div>\r\n       <p>{`${blog.user.username}`}</p>\r\n       <button onClick={flipFullState} >Hide Full</button>\r\n     </div>\r\n   ) \r\n  }\r\n  else {\r\n    return(\r\n      <div>\r\n        {blog.title} {blog.author}\r\n        <button onClick={flipFullState} >View Full</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n    errorMessage,\r\n    handleLogin,\r\n    handleUsernameChange,\r\n    handlePasswordChange,\r\n    username,\r\n    password\r\n}) => (\r\n    <div>\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n            <div>\r\n                username:\r\n          <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    name=\"Username\"\r\n                    onChange={handleUsernameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                password:\r\n          <input\r\n                    type=\"text\"\r\n                    value={password}\r\n                    name=\"Password\"\r\n                    onChange={handlePasswordChange}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">login</button>\r\n        </form>\r\n    </div>\r\n)\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\n  const Notification = ({ \r\n      successMessage,\r\n      errorMessage\r\n     }) => {\r\n    if (errorMessage) {\r\n        const message = errorMessage\r\n      return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n    else if (successMessage) {\r\n        const message = successMessage\r\n      return (\r\n        <div className=\"success\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\nexport default Notification","import React from 'react'\r\n\r\n  const NewBlogForm = ({\r\n      title,\r\n      author,\r\n      url,\r\n      handlePost,\r\n      handleTitleChange,\r\n      handleAuthorChange,\r\n      handleUrlChange\r\n  }) => (\r\n    <div>\r\n      <h2>Create New Blogs</h2>\r\n      <form onSubmit={handlePost}>\r\n        <div>\r\n          Title:\r\n  <input\r\n            type=\"text\"\r\n            value={title}\r\n            name=\"Title\"\r\n            onChange={handleTitleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          Author:\r\n  <input\r\n            type=\"text\"\r\n            value={author}\r\n            name=\"Author\"\r\n            onChange={handleAuthorChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          url:\r\n  <input\r\n            type=\"text\"\r\n            value={url}\r\n            name=\"url\"\r\n            onChange={handleUrlChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\nexport default NewBlogForm","import React from 'react'\r\n\r\nconst LogoutButton = ({ handleLogout }) => (\r\n  <div>\r\n    <button onClick={handleLogout}>Logout</button> \r\n  </div>\r\n)\r\n\r\nexport default LogoutButton","import React from 'react'\r\nimport LogoutButton from './LogoutButton'\r\nimport Blog from './Blog'\r\n\r\nconst BlogDisplay = (props) => {\r\n  const sortedBlogs = props.blogs.sort((blogOne,blogTwo) => (blogOne.likes > blogTwo.likes) ? -1 : 1)\r\n  return(\r\n    <div>\r\n      <h2>Blogs</h2>\r\n      <LogoutButton handleLogout={props.handleLogout} />\r\n      <h3>Posted Blogs</h3> \r\n      {sortedBlogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n      {/* {NewBlogForm()} */}\r\n      <div className=\"blog_form\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogDisplay","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Toggleable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = { display: visible ? 'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <button onClick={toggleVisibility}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default Toggleable","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n} \r\n\r\nexport default {login}","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport LoginForm from './components/loginForm'\r\nimport Notification from './components/Notification'\r\nimport NewBlogForm from './components/NewBlogForm'\r\nimport BlogDisplay from './components/BlogDisplay'\r\nimport LogoutButton from './components/LogoutButton'\r\nimport Toggleable from './components/Toggleable'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [author, setAuthor] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\r\n    if (loggedInUserJSON) {\r\n      const user = JSON.parse(loggedInUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )}\r\n  , [])\r\n\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n     const user = await loginService.login({\r\n       username, password\r\n     })\r\n\r\n     window.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n\r\n     setUser(user)\r\n     blogService.setToken(user.token)\r\n     setUsername('')\r\n     setPassword('')\r\n     setSuccessMessage(`Logged in as ${user.username}`)\r\n     setTimeout(() => {\r\n       setSuccessMessage(null)\r\n     }, 5000);\r\n    }\r\n    catch (exception) {\r\n      console.log('login failed');\r\n      setErrorMessage('Wrong username or password')\r\n      setTimeout(() => {\r\n        setErrorMessage(null) \r\n      }, 5000);\r\n    }\r\n  }\r\n  \r\n  const handleLogout = async (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.removeItem('loggedInUser')\r\n    window.localStorage.removeItem('loggedInBlogs')\r\n    setUser(null)\r\n  }\r\n\r\n  const handlePost = async (event) => {\r\n    event.preventDefault()\r\n    const header = 'Authorization: Bearer ' + user.token\r\n    try {\r\n      const newBlog = { title, author, url}\r\n      blogFormRef.current.toggleVisibility()\r\n      const newObject = await blogService.create(newBlog)\r\n      setSuccessMessage(`Added ${newBlog.title} by ${newBlog.author}`)\r\n\r\n      setBlogs(blogs.concat(newObject))\r\n\r\n      setTimeout(() => {\r\n        setSuccessMessage(null)\r\n      }, 5000);\r\n      \r\n      setAuthor('')\r\n      setTitle('')\r\n      setUrl('')\r\n\r\n    } catch (err) {\r\n      setErrorMessage('Addition of the new blog failed')\r\n\r\n      setTimeout(() => {\r\n        setErrorMessage(null) \r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const blogDisplay = () => (\r\n    <BlogDisplay\r\n      handleLogout={handleLogout}\r\n      blogs={blogs}\r\n    >\r\n      <Toggleable buttonLabel=\"Add A New Blog\" ref={blogFormRef}>\r\n        <NewBlogForm\r\n          title={title}\r\n          author={author}\r\n          url={url}\r\n          handlePost={handlePost}\r\n          handleTitleChange={({ target }) => setTitle(target.value)}\r\n          handleAuthorChange={({ target }) => setAuthor(target.value)}\r\n          handleUrlChange={({ target }) => setUrl(target.value)}\r\n        />\r\n      </Toggleable>\r\n    </BlogDisplay>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Notification\r\n          successMessage={successMessage}\r\n          errorMessage={errorMessage}\r\n        />\r\n      </div>\r\n      <div>\r\n        {user === null ?\r\n          <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleLogin={handleLogin}\r\n          /> :\r\n          blogDisplay()\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './App.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}