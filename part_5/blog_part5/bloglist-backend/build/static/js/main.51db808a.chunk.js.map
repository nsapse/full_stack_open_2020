{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","create","newObject","header","a","config","headers","Authorization","post","setToken","newToken","console","log","login","credentials","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","setAuthor","setTitle","url","setUrl","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","loggedInUserJSON","window","localStorage","getItem","JSON","parse","blogService","Notification","message","className","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","handleLogout","removeItem","handlePost","newBlog","concat","onSubmit","type","value","name","onChange","target","onClick","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51db808a.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n  console.log(`token set to ${token}`)\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n  \r\n\r\nconst create = async (newObject, header) => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  const response = await axios.post(baseUrl, newObject,config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n} \r\n\r\nexport default {login}","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [author, setAuthor] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\r\n    if (loggedInUserJSON) {\r\n      const user = JSON.parse(loggedInUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  },[])\r\n\r\n\r\n  const Notification = ({ message }) => {\r\n    if (message == null) {\r\n      return null\r\n    }\r\n    if (errorMessage) {\r\n      return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n    else if (successMessage) {\r\n      return (\r\n        <div className=\"success\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )}\r\n  , [])\r\n\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log(`logging in with username: ${username} password: ${password}`);\r\n    try {\r\n     const user = await loginService.login({\r\n       username, password\r\n     })\r\n\r\n     window.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n\r\n     setUser(user)\r\n     blogService.setToken(user.token)\r\n    // console.log(`user set to : ${user}`);\r\n    // console.log(`user's token is ${user.token}`);\r\n    \r\n    \r\n    //  const properBlogs = blogs.filter(blog => blog.user !== undefined) \r\n    //  const userBlogs = properBlogs.filter(blog => blog.user.username === user.username)\r\n    //  window.localStorage.setItem('loggedInBlogs', JSON.stringify(userBlogs))\r\n    //  setBlogs(userBlogs)\r\n     setUsername('')\r\n     setPassword('')\r\n\r\n    }\r\n    catch (exception) {\r\n      console.log('login failed');\r\n      setErrorMessage('Wrong username or password')\r\n      setTimeout(() => {\r\n        setErrorMessage(null) \r\n      }, 5000);\r\n    }\r\n  }\r\n  \r\n  const handleLogout = async (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.removeItem('loggedInUser')\r\n    window.localStorage.removeItem('loggedInBlogs')\r\n    setUser(null)\r\n  }\r\n\r\n\r\nconst logOutButton = () => (\r\n  <div>\r\n    <button onClick={handleLogout}>Logout</button> \r\n  </div>\r\n)\r\n\r\nconst loginForm = () => (\r\n    <div>\r\n        <h2>Login</h2>\r\n        <Notification message = {errorMessage}></Notification>\r\n        <form onSubmit={handleLogin}>\r\n            <div>\r\n                username:\r\n          <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    name=\"Username\"\r\n                    onChange={({ target }) => setUsername(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                password:\r\n          <input\r\n                    type=\"text\"\r\n                    value={password}\r\n                    name=\"Password\"\r\n                    onChange={({ target }) => setPassword(target.value)}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">login</button>\r\n        </form>\r\n    </div>\r\n)\r\n\r\n  const handlePost = async (event) => {\r\n    event.preventDefault()\r\n    console.log(`Creating new post with Author: ${author} and URL: ${url}`);\r\n    const header = 'Authorization: Bearer ' + user.token\r\n    console.log(`Header is ${header}`)\r\n    try {\r\n      const newBlog = { title, author, url}\r\n      const newObject = await blogService.create(newBlog)\r\n      setBlogs(blogs.concat(newObject))\r\n      setAuthor('')\r\n      setTitle('')\r\n      setUrl('')\r\n      setSuccessMessage('Blog Successfully Added')\r\n      setTimeout(() => {\r\n        setSuccessMessage(null) \r\n      }, 5000)\r\n    } catch (err) {\r\n      setErrorMessage('Addition of the new blog failed');\r\n    }\r\n  }\r\n\r\n  const newBlogForm = () => (\r\n    <div>\r\n      <h2>Create New Blogs</h2>\r\n      <form onSubmit={handlePost}>\r\n        <div>\r\n          Title:\r\n  <input\r\n            type=\"text\"\r\n            value={title}\r\n            name=\"Title\"\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          Author:\r\n  <input\r\n            type=\"text\"\r\n            value={author}\r\n            name=\"Author\"\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url:\r\n  <input\r\n            type=\"text\"\r\n            value={url}\r\n            name=\"url\"\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n\r\n\r\nconst blogDisplay = () => (\r\n    <div>\r\n      <h2>Blogs</h2>\r\n      <Notification message={successMessage}></Notification>\r\n      {logOutButton()}\r\n      <h3>Posted Blogs</h3> \r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n      {newBlogForm()}\r\n    </div>\r\n)\r\n\r\n\r\n\r\nreturn (\r\n    <div>\r\n    { user === null ?\r\n      loginForm() :\r\n      blogDisplay()\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './App.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}