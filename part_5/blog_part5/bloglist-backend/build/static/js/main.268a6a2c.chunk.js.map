{"version":3,"sources":["components/loginForm.js","components/Notification.js","components/NewBlogForm.js","services/blogs.js","components/LogoutButton.js","components/Blog.js","components/BlogDisplay.js","components/Toggleable.js","services/login.js","App.js","index.js"],"names":["LoginForm","errorMessage","handleLogin","handleUsernameChange","handlePasswordChange","username","password","onSubmit","type","value","name","onChange","Notification","successMessage","message","className","NewBlogForm","title","author","url","handlePost","handleTitleChange","handleAuthorChange","handleUrlChange","token","getAll","axios","get","then","response","data","create","newObject","header","a","config","headers","Authorization","post","setToken","newToken","console","log","update","id","request","put","deleteOne","delete","LogoutButton","handleLogout","onClick","Blog","blog","deleteEntry","incrementLikes","useState","full","setFull","currentUser","JSON","parse","window","localStorage","getItem","flipFullState","deleteVisible","display","user","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","likes","BlogDisplay","props","blogs","setBlogs","useEffect","blogService","sort","blogOne","blogTwo","confirmation","confirm","targetID","remainingBlogs","filter","modificationID","find","updatedlikes","updatedblog","incrementedBlog","updatedBlogs","concat","map","key","children","Toggleable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","login","credentials","App","setUsername","setPassword","setUser","setAuthor","setTitle","setUrl","setErrorMessage","setSuccessMessage","blogFormRef","createRef","loggedInUserJSON","event","preventDefault","loginService","setItem","stringify","setTimeout","removeItem","newBlog","current","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.268a6a2c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst LoginForm = ({\r\n    errorMessage,\r\n    handleLogin,\r\n    handleUsernameChange,\r\n    handlePasswordChange,\r\n    username,\r\n    password\r\n}) => (\r\n    <div>\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n            <div>\r\n                username:\r\n          <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    name=\"Username\"\r\n                    onChange={handleUsernameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                password:\r\n          <input\r\n                    type=\"text\"\r\n                    value={password}\r\n                    name=\"Password\"\r\n                    onChange={handlePasswordChange}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">login</button>\r\n        </form>\r\n    </div>\r\n)\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\n  const Notification = ({ \r\n      successMessage,\r\n      errorMessage\r\n     }) => {\r\n    if (errorMessage) {\r\n        const message = errorMessage\r\n      return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n    else if (successMessage) {\r\n        const message = successMessage\r\n      return (\r\n        <div className=\"success\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\nexport default Notification","import React from 'react'\r\n\r\n  const NewBlogForm = ({\r\n      title,\r\n      author,\r\n      url,\r\n      handlePost,\r\n      handleTitleChange,\r\n      handleAuthorChange,\r\n      handleUrlChange\r\n  }) => (\r\n    <div>\r\n      <h2>Create New Blogs</h2>\r\n      <form onSubmit={handlePost}>\r\n        <div>\r\n          Title:\r\n  <input\r\n            type=\"text\"\r\n            value={title}\r\n            name=\"Title\"\r\n            onChange={handleTitleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          Author:\r\n  <input\r\n            type=\"text\"\r\n            value={author}\r\n            name=\"Author\"\r\n            onChange={handleAuthorChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          url:\r\n  <input\r\n            type=\"text\"\r\n            value={url}\r\n            name=\"url\"\r\n            onChange={handleUrlChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\nexport default NewBlogForm","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n  console.log(`token set to ${token}`)\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n  \r\n\r\nconst create = async (newObject, header) => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  const response = await axios.post(baseUrl, newObject,config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n    const request =  axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data )\r\n}\r\n\r\nconst deleteOne = async (id) => {\r\n  console.log(`Deleting blog id: ${id}`)\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  console.log('Response is', response);\r\n  return response.data\r\n}\r\n\r\nexport default { getAll,\r\n                 create,\r\n                 setToken,\r\n                 update,\r\n                 deleteOne,\r\n                 }\r\n","import React from 'react'\r\n\r\nconst LogoutButton = ({ handleLogout }) => (\r\n  <div>\r\n    <button onClick={handleLogout}>Logout</button> \r\n  </div>\r\n)\r\n\r\nexport default LogoutButton","import React, {useState} from 'react'\r\nimport blogService from '../services/blogs'\r\n\r\nconst Blog = ({blog, deleteEntry, incrementLikes}) => {\r\n  const [full, setFull] = useState(false)  \r\n  const currentUser= JSON.parse(window.localStorage.getItem('loggedInUser')).username\r\n  const showDelete = blog.user.username === currentUser    \r\n   \r\n  const flipFullState = () => {\r\n    setFull(!full)\r\n  }\r\n\r\n  const deleteVisible = {display: showDelete ? '' : 'none'}\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  if (full) {\r\n   return(\r\n     <div style={blogStyle}>\r\n       <p>{`${blog.title} by ${blog.author}`}</p>\r\n       <p>{`URL: ${blog.url}`}</p>\r\n       <div>\r\n         <p>\r\n           {`Likes: ${blog.likes}`}\r\n         </p>\r\n         <button onClick={() => incrementLikes(blog.id)}>Like</button>\r\n       </div>\r\n        <p>{`${blog.user.username}`}</p>\r\n        <button onClick={flipFullState} >Hide Full</button>\r\n        <button style={deleteVisible} onClick={() => deleteEntry(blog.id)}>Delete Blog Entry</button>\r\n     </div>\r\n   ) \r\n  }\r\n  else {\r\n    return(\r\n      <div>\r\n        {blog.title} {blog.author}\r\n        <button onClick={flipFullState} >View Full</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Blog\r\n","import React, {useState, useEffect} from 'react'\r\nimport blogService from '../services/blogs'\r\nimport LogoutButton from './LogoutButton'\r\nimport Blog from './Blog'\r\n\r\nconst BlogDisplay = (props) => {\r\n  const [blogs, setBlogs] = useState([])\r\n  \r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs(blogs.sort((blogOne,blogTwo) => (blogOne.likes > blogTwo.likes) ? -1 : 1))\r\n    )}, [])\r\n\r\n  const deleteEntry = async (id) => {\r\n    const confirmation = window.confirm(\"Are you sure you want to delete this post\")\r\n    const targetID = id\r\n    if(confirmation) {\r\n          blogService.deleteOne(targetID)\r\n          const remainingBlogs = blogs.filter(blog => blog.id !== targetID)\r\n          setBlogs(remainingBlogs)\r\n    }\r\n    return null\r\n  }\r\n\r\n  const incrementLikes = async (id) => {\r\n    try {\r\n      const modificationID = id\r\n      console.log('modificationid reading a', modificationID);\r\n      const blog = blogs.find(blog => blog.id === id)\r\n      console.log('blog to be modified', blog);\r\n      console.log('likes of blog to be modified', blog.likes);\r\n      const updatedlikes = blog.likes + 1\r\n      const updatedblog = {\r\n        ...blog,\r\n        likes: updatedlikes\r\n      }\r\n      const incrementedBlog = await blogService.update(modificationID, updatedblog)\r\n      console.log('Incremented Blog is: ', incrementedBlog  );\r\n      const updatedBlogs = blogs.filter(blog => blog.id !== id).concat(incrementedBlog)\r\n      console.log('updated Blogs are: ', updatedBlogs);\r\n      setBlogs(updatedBlogs)\r\n    } catch (err) {\r\n      console.log('the note could not be updated');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>Blogs</h2>\r\n      <LogoutButton handleLogout={props.handleLogout} />\r\n      <h3>Posted Blogs</h3> \r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id}\r\n              blog={blog}\r\n              deleteEntry={deleteEntry}\r\n              incrementLikes={incrementLikes}\r\n              />\r\n      )}\r\n      <div className=\"blog_form\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogDisplay","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Toggleable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = { display: visible ? 'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <button onClick={toggleVisibility}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default Toggleable","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n} \r\n\r\nexport default {login}","import React, { useState, useEffect } from 'react'\r\nimport LoginForm from './components/loginForm'\r\nimport Notification from './components/Notification'\r\nimport NewBlogForm from './components/NewBlogForm'\r\nimport BlogDisplay from './components/BlogDisplay'\r\nimport Toggleable from './components/Toggleable'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [author, setAuthor] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\r\n    if (loggedInUserJSON) {\r\n      const user = JSON.parse(loggedInUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  },[])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n     const user = await loginService.login({\r\n       username, password\r\n     })\r\n\r\n     window.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n\r\n     setUser(user)\r\n     blogService.setToken(user.token)\r\n     setUsername('')\r\n     setPassword('')\r\n     setSuccessMessage(`Logged in as ${user.username}`)\r\n     setTimeout(() => {\r\n       setSuccessMessage(null)\r\n     }, 5000);\r\n    }\r\n    catch (exception) {\r\n      console.log('login failed');\r\n      setErrorMessage('Wrong username or password')\r\n      setTimeout(() => {\r\n        setErrorMessage(null) \r\n      }, 5000);\r\n    }\r\n  }\r\n  \r\n  const handleLogout = async (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.removeItem('loggedInUser')\r\n    window.localStorage.removeItem('loggedInBlogs')\r\n    setUser(null)\r\n  }\r\n\r\n  const handlePost = async (event) => {\r\n    event.preventDefault()\r\n    const header = 'Authorization: Bearer ' + user.token\r\n    try {\r\n      const newBlog = { title, author, url}\r\n      blogFormRef.current.toggleVisibility()\r\n      const newObject = await blogService.create(newBlog)\r\n      setSuccessMessage(`Added ${newBlog.title} by ${newBlog.author}`)\r\n\r\n      // setBlogs(blogs.concat(newObject))\r\n\r\n      setTimeout(() => {\r\n        setSuccessMessage(null)\r\n      }, 5000);\r\n      \r\n      setAuthor('')\r\n      setTitle('')\r\n      setUrl('')\r\n\r\n    } catch (err) {\r\n      setErrorMessage('Addition of the new blog failed')\r\n\r\n      setTimeout(() => {\r\n        setErrorMessage(null) \r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const blogDisplay = () => (\r\n    <BlogDisplay\r\n      handleLogout={handleLogout}\r\n    >\r\n      <Toggleable buttonLabel=\"Add A New Blog\" ref={blogFormRef}>\r\n        <NewBlogForm\r\n          title={title}\r\n          author={author}\r\n          url={url}\r\n          handlePost={handlePost}\r\n          handleTitleChange={({ target }) => setTitle(target.value)}\r\n          handleAuthorChange={({ target }) => setAuthor(target.value)}\r\n          handleUrlChange={({ target }) => setUrl(target.value)}\r\n        />\r\n      </Toggleable>\r\n    </BlogDisplay>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Notification\r\n          successMessage={successMessage}\r\n          errorMessage={errorMessage}\r\n        />\r\n      </div>\r\n      <div>\r\n        {user === null ?\r\n          <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleLogin={handleLogin}\r\n          /> :\r\n          blogDisplay()\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './App.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}